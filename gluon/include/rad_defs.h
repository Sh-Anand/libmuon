#define GPU_DRAM_SIZE (512 * 1024 * 1024)
#define KERNEL_HEADER_MEM_START_PC 0 // [0:3], 4 bytes
#define KERNEL_HEADER_MEM_KERNEL_PC (KERNEL_HEADER_MEM_START_PC + 4) // [4:7], 4 bytes
#define KERNEL_HEADER_MEM_GRID_X (KERNEL_HEADER_MEM_KERNEL_PC + 4) // [8:9], 2 bytes
#define KERNEL_HEADER_MEM_GRID_Y (KERNEL_HEADER_MEM_GRID_X + 2) // [10:11], 2 bytes
#define KERNEL_HEADER_MEM_GRID_Z (KERNEL_HEADER_MEM_GRID_Y + 2) // [12:13], 2 bytes
#define KERNEL_HEADER_MEM_BLOCK_X (KERNEL_HEADER_MEM_GRID_Z + 2) // [14:15], 2 bytes
#define KERNEL_HEADER_MEM_BLOCK_Y (KERNEL_HEADER_MEM_BLOCK_X + 2) // [16:17], 2 bytes
#define KERNEL_HEADER_MEM_BLOCK_Z (KERNEL_HEADER_MEM_BLOCK_Y + 2) // [18:19], 2 bytes
#define KERNEL_HEADER_MEM_REGS_PER_THREAD (KERNEL_HEADER_MEM_BLOCK_Z + 2) // [20:20], 1 byte
#define KERNEL_HEADER_MEM_SMEM_PER_BLOCK (KERNEL_HEADER_MEM_REGS_PER_THREAD + 1) // [21:24], 4 bytes
#define KERNEL_HEADER_MEM_FLAGS (KERNEL_HEADER_MEM_SMEM_PER_BLOCK + 4) // [25:25], 1 byte
#define KERNEL_HEADER_MEM_PRINTF_HOST_ADDR (KERNEL_HEADER_MEM_FLAGS + 1) // [26:29], 4 bytes
#define KERNEL_HEADER_MEM_PARAMS_SZ (KERNEL_HEADER_MEM_PRINTF_HOST_ADDR + 4) // [30:33], 4 bytes
#define KERNEL_HEADER_MEM_BINARY_SZ (KERNEL_HEADER_MEM_PARAMS_SZ + 4) // [34:37], 4 bytes
#define KERNEL_HEADER_MEM_PADDING (KERNEL_HEADER_MEM_BINARY_SZ) & (sizeof(uint32_t) - 1) // 2 bytes of padding for 4 byte alignment
#define KERNEL_HEADER_MEM_END (KERNEL_HEADER_MEM_BINARY_SZ + KERNEL_HEADER_MEM_PADDING) // [38:39], 2 bytes

#define KERNEL_HEADER_BYTES 40
#define KERNEL_REGS_PER_THREAD 1
#define KERNEL_SMEM_PER_BLOCK 1
#define KERNEL_FLAGS 0
#define KERNEL_PRINTF_HOST_ADDR 0
#define KERNEL_RESERVED_U16 0
